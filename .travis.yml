sudo: required
os: osx
osx_image: xcode10.1
language: node_js
node_js: "8"
env:
  global:
    - PLATFORM_VERSION=12.1
    - _FORCE_LOGS=1
    - RECURSIVE=--recursive
    - MAX_PARALLEL=0
    - DEBUG=mocha-parallel-tests
    - secure: "FQsmPePKtAjvVLpmb26Fr+o6+p1H0apwhGFmCRKn3A+7HhSbl+3DaxKm16RhLnruo+AYRlourSbj7KddgGzHLlvr63fwqrd9WR3oHIDwI1eyBZxbXnvHIrKxOQQsPZx00oLtidQ4fNq1OpqpMBWINOsi4R0tlt4vpewv++DBwOeUmdlzWM66VeATVrQLxTx7HbyYRfTBgTCyC2zQveBFkkWQYH9klOOgre4CMr6QvPr4VNLrWWBWy1+ZIYBl4nJt5hqhhC12bWnUQlJP+TzZVB6zo09hyW2hPPLTZxMb+oFY7Mj0PmUP1Mm+2xX90j04/Jh6bsCnmi4n4JfdooRE3krxavzq8pdNQ4a4KjRCJjrBELr2vNPlkK54hqCoa++w9mRuYDztQcnJQyGzhUFqn7yqDdqPdUl6qa4Zn41GJDzXikz51ITb9ZU3/pb1FSxePWZ5Q3Nx7pcZHWFt+gRROEAHQizdqqk//7isLBQU1ReLzgJd+sl6YG4NS7q0mxnEjZyPCeIO3z45ODmrSKguwt6oRraFe/0hYtnQVgAoCx0GajSh8haqInyRHDvydI0+9nvRAUPdynhm1jxGjM3ZyfutcpQIveLYyKV6WrgYkwETZOOGFJ/MzCI4vF+bSkMshWuNhH3vprnWWjTDnBSWFSn4y6pFSBjf2MPWt6e4YYQ="
jobs:
  include:
    - stage: tests
      if: type != cron
      osx_image: xcode10.1
      env: TEST=unit COVERALLS=1 _FORCE_LOGS=0

    - stage:
      if: type != cron
      env: CI_METRICS=1 TEST=functional/basic

    - stage:
      if: type != cron
      env: TEST=functional/driver

    - stage:
      if: type != cron
      env: CI_METRICS=1 TEST=functional/web

    - stage:
      if: type != cron
      env: CI_METRICS=1 TEST=functional/long

    - stage: # smoke test on xcode 10 web
      if: type != cron
      osx_image: xcode10
      env: CI_METRICS=1 PLATFORM_VERSION=12.0 TEST=functional/web

    - stage: # smoke test on xcode 9.4 web
      if: type != cron
      osx_image: xcode9.4
      env: CI_METRICS=1 PLATFORM_VERSION=11.4 TEST=functional/web

    - stage: "[CRON] Upload Appium build to Sauce Storage"
      if: type = cron
      os: linux
      env: CLOUD=1
      script: $(npm bin)/gulp sauce-storage-upload

     Sauce Emusim tests
    - stage: "[CRON] Sauce Emusim tests"
      if: type = cron
      os: linux
      name: Basic, device 0
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=0 TEST=functional/basic
    - stage:
      if: type = cron
      os: linux
      name: Basic, device 1
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=1 TEST=functional/basic
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Basic, device 2
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=2 TEST=functional/basic
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Basic, device 3
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=3 TEST=functional/basic
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Basic, device 4
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=4 TEST=functional/basic

    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Web, device 0
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=0 TEST=functional/web
    #  addons: &sc
    #    sauce_connect:
    #      no_ssl_bump_domains: localhost
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Web, device 1
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=1 TEST=functional/web
    #  addons:
    #    *sc
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Web, device 2
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=2 TEST=functional/web
    #  addons:
    #    *sc
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Web, device 3
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=3 TEST=functional/web
    #  addons:
    #    *sc
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Web, device 4
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=4 TEST=functional/web
    #  addons:
    #    *sc

    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Long, device 0
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=0 LONG=1 TEST=functional/long
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Long, device 1
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=1 LONG=1 TEST=functional/long
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Long, device 2
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=2 LONG=1 TEST=functional/long
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Long, device 3
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=3 LONG=1 TEST=functional/long
    #- stage:
    #  if: type = cron
    #  os: linux
    #  name: Long, device 4
    #  env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=4 LONG=1 TEST=functional/long


    # - stage: "[CRON] Sauce RDC Tests"
    #   if: type = cron
    #   os: linux
    #   env: CLOUD=1 SAUCE_RDC_DEVICE_INDEX=0 TEST=functional/basic
    # - stage:
    #   if: type = cron
    #   os: linux
    #   env: CLOUD=1 SAUCE_RDC_DEVICE_INDEX=1 TEST=functional/basic
    # - stage:
    #   if: type = cron
    #   os: linux
    #   env: CLOUD=1 SAUCE_RDC_DEVICE_INDEX=0 TEST=functional/web
    # - stage:
    #   if: type = cron
    #   os: linux
    #   env: CLOUD=1 SAUCE_RDC_DEVICE_INDEX=1 TEST=functional/web
    # - stage:
    #   if: type = cron
    #   os: linux
    #   env: CLOUD=1 SAUCE_RDC_DEVICE_INDEX=0 TEST=functional/long
    # - stage:
    #   if: type = cron
    #   os: linux
    #   env: CLOUD=1 SAUCE_RDC_DEVICE_INDEX=1 TEST=functional/long

git:
  submodules: false
before_install:
  # Use sed to replace the SSH URL with the public URL, then initialize submodules
  # code from http://stackoverflow.com/a/24600210/375688
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      sed -i '' 's/git@github.com:/https:\/\/github.com\//' /Users/travis/build/appium/appium-xcuitest-driver/.gitmodules;
      git submodule update --init --recursive;
    fi
install:
  - npm --version
  - node --version
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      npm install;
      npm install --no-save mjpeg-consumer;
    else
      npm install --production;
      npm install --no-save gulp appium-gulp-plugins chai chai-as-promised chai-subset wd unzip mocha mocha-parallel-tests;
      npm install --no-save saucelabs;
      $(npm bin)/gulp fix-mocha-parallel-tests;
      npm run build;
      $(npm bin)/gulp periodic-output & export LONG_PID=$!;
    fi
script:
  - if [ -n "$CLOUD" ]; then
      npm run mocha:parallel -- --max-parallel $MAX_PARALLEL --debug -t 480000 --require build/test/env/env --recursive build/test/$TEST;
    else
      npm run lint && npm run mocha -- -t 480000 $RECURSIVE build/test/$TEST -g @skip-ci -i --exit;
    fi
after_script:
  - if [-n "$LONG_PID" ]; then
      kill $LONG_PID;
    fi
after_success:
  - if [ -n "$CI_METRICS" ]; then
      mkdir -p ./ci-metrics && ls -la ./ci-metrics;
      npm install -g appium-event-parser;
      appium-event-parser -s -i ./ci-metrics;
    fi
  - if [ ${COVERALLS} = "1" ]; then npm run coverage; fi
